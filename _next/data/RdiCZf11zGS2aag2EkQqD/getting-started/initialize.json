{"pageProps":{"frontmatter":{"title":"Initialize","subtitle":"How to initialize chatty sdk"},"headings":[{"depth":2,"value":"What for initialize"},{"depth":2,"value":"Where to initialize"},{"depth":2,"value":"Need help?"}],"body":{"compiledSource":"var u=Object.defineProperty,c=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(e,t,o)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,i=(e,t)=>{for(var o in t||(t={}))r.call(t,o)&&p(e,o,t[o]);if(n)for(var o of n(t))s.call(t,o)&&p(e,o,t[o]);return e},l=(e,t)=>c(e,m(t));var d=(e,t)=>{var o={};for(var a in e)r.call(e,a)&&t.indexOf(a)<0&&(o[a]=e[a]);if(e!=null&&n)for(var a of n(e))t.indexOf(a)<0&&s.call(e,a)&&(o[a]=e[a]);return o};const makeShortcode=e=>function(o){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",i({},o))},InfoBlock=makeShortcode(\"InfoBlock\"),NextBlock=makeShortcode(\"NextBlock\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var a=o,{components:e}=a,t=d(a,[\"components\"]);return mdx(MDXLayout,l(i(i({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"What for initialize\"),mdx(\"p\",null,\"To use sdk properly, need to initialize two things as below\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"API key generated at dashboard\"),mdx(\"li\",{parentName:\"ul\"},\"Register user's id and name as a member to let sdk know who attend chat\")),mdx(\"h2\",null,\"Where to initialize\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Place where can specify the user identification during application booting up\"),mdx(\"li\",{parentName:\"ul\"},\"And after member signin or login\")),mdx(InfoBlock,{type:\"note\",mdxType:\"InfoBlock\"},\"- Even if init function is called multiple time, the member is not registered as a duplicate (member is always unique) - If member signout and signin again, the member id should be different with previous member id. especially, in case of third party oauth login, don't use provider's id as member id\"),mdx(\"p\",null,\"file: App.js\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-javascript\"}),`import Chatty from 'chatty-cloud';\n\n\n// When identifier of user is specific, call init function\n// Ex) 1. during application bootup process, 2. after new user join or login\n\nif (isLoggedIn) {\n  await Chatty.init({\n    apiKey: <API KEY>,                // API Key of your app that created in dashboard \n    member: {\n      id: <MEMBER ID>,                // mandatory  (ex: user.id)\n      name: <MEMBER NAME>,            // mandatory  (ex: user.name)\n      avatar: <MEMBER AVATAR URL>,    // optional   (ex: user.avatar)\n      language: <MEMBER LANGUAGE>,    // optional   (ex: 'en')\n      country: <MEMBER COUNTRY>,      // optional   (ex: 'US')\n      deviceToken: <FCM DEVICE TOKEN> // optional   \n    }\n  });\n}\n`)),mdx(InfoBlock,{type:\"warning\",mdxType:\"InfoBlock\"},\"Please manage API Key securely.\"),mdx(\"h2\",null,\"Need help?\"),mdx(\"p\",null,\"Get help from \",mdx(\"a\",i({parentName:\"p\"},{href:\"https://www.chatty-cloud.com/support\"}),\"ChattyCloud's support team\"),\", or join our \",mdx(\"a\",i({parentName:\"p\"},{href:\"https://github.com/chatty-cloud/beta/discussions\"}),\"GitHub Discussion board\"),\" to see how others are using ChattyCloud.\"),mdx(NextBlock,{steps:[{text:\"Peer to Peer Chat\",link:\"/getting-started/p2p\"}],mdxType:\"NextBlock\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}},"fields":{"slug":"getting-started/initialize","lastUpdatedOn":"2022-04-18T12:15:25.602Z"}},"__N_SSG":true}