{"pageProps":{"frontmatter":{"title":"Connect a Rails app","subtitle":""},"headings":[{"depth":2,"value":"Introduction"},{"depth":2,"value":"Prerequisites"},{"depth":2,"value":"Create a Rails project"},{"depth":2,"value":"Create a ChattyCloud database and password"},{"depth":3,"value":"Using the CLI to create a connection string"},{"depth":2,"value":"Configure Rails and ChattyCloud"},{"depth":2,"value":"Migrate your database"},{"depth":2,"value":"Promote your main branch to a production branch"},{"depth":2,"value":"Summary"},{"depth":2,"value":"Further reading"},{"depth":2,"value":"What's next?"},{"depth":2,"value":"Need help?"}],"body":{"compiledSource":"var c=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var s=(a,t,o)=>t in a?c(a,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[t]=o,e=(a,t)=>{for(var o in t||(t={}))i.call(t,o)&&s(a,o,t[o]);if(r)for(var o of r(t))l.call(t,o)&&s(a,o,t[o]);return a},p=(a,t)=>m(a,h(t));var d=(a,t)=>{var o={};for(var n in a)i.call(a,n)&&t.indexOf(n)<0&&(o[n]=a[n]);if(a!=null&&r)for(var n of r(a))t.indexOf(n)<0&&l.call(a,n)&&(o[n]=a[n]);return o};const makeShortcode=a=>function(o){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},o))},InfoBlock=makeShortcode(\"InfoBlock\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:a}=n,t=d(n,[\"components\"]);return mdx(MDXLayout,p(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Introduction\"),mdx(\"p\",null,\"In this tutorial, we\\u2019re going to create a simple Rails application named \",mdx(\"em\",{parentName:\"p\"},\"blog\"),\" and connect it to a ChattyCloud database. We\\u2019ll perform the initial migration from our local Rails application, and set up the database for future development.\"),mdx(\"h2\",null,\"Prerequisites\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Install \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://guides.rubyonrails.org/getting_started.html#creating-a-new-rails-project-installing-rails\"}),\"Ruby and the Rails gem\"),\".\"),mdx(\"li\",{parentName:\"ul\"},\"Install the \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/chatty-cloud/cli\"}),\"ChattyCloud CLI\"),\".\"),mdx(\"li\",{parentName:\"ul\"},\"Authenticate the CLI with the following command:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`pscale auth login\n`)),mdx(\"h2\",null,\"Create a Rails project\"),mdx(\"p\",null,\"To connect a Rails application to a ChattyCloud database, we start by creating a sample Rails project named \",mdx(\"em\",{parentName:\"p\"},\"blog\"),\" and installing the libraries we'll need to connect to our ChattyCloud database.\"),mdx(\"p\",null,\"Open the command line and follow these steps:\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"Create a Rails app named \",mdx(\"em\",{parentName:\"li\"},\"blog\"),\" by running the following command:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`rails new blog\n`)),mdx(\"ol\",e({},{start:2}),mdx(\"li\",{parentName:\"ol\"},\"Change into the directory you just created, the \",mdx(\"inlineCode\",{parentName:\"li\"},\"blog\"),\" Rails app:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`cd blog\n`)),mdx(\"ol\",e({},{start:3}),mdx(\"li\",{parentName:\"ol\"},\"Next, add the \",mdx(\"inlineCode\",{parentName:\"li\"},\"mysql2\"),\" gem to your \",mdx(\"em\",{parentName:\"li\"},\"Gemfile\"),\":\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-ruby\"}),`gem \"mysql2\"\n`)),mdx(\"ol\",e({},{start:4}),mdx(\"li\",{parentName:\"ol\"},\"Then run \",mdx(\"inlineCode\",{parentName:\"li\"},\"bundle install\"))),mdx(\"p\",null,\"At this point, we have accomplished two things: we've created a Rails project called \",mdx(\"em\",{parentName:\"p\"},\"blog\"),\" and installed the libraries that we'll need to connect to our ChattyCloud database. Now it\\u2019s time to create a ChattyCloud database.\"),mdx(\"h2\",null,\"Create a ChattyCloud database and password\"),mdx(\"p\",null,\"You can also create passwords in the ChattyCloud application as documented \",mdx(\"a\",e({parentName:\"p\"},{href:\"/concepts/connection-strings#creating-a-password\"}),\"here\"),\".\"),mdx(\"h3\",null,\"Using the CLI to create a connection string\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"Using the \",mdx(\"inlineCode\",{parentName:\"li\"},\"pscale\"),\" CLI, create a new database also named \",mdx(\"em\",{parentName:\"li\"},\"blog\"),\":\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`pscale database create blog\n`)),mdx(\"ol\",e({},{start:2}),mdx(\"li\",{parentName:\"ol\"},\"Using the \",mdx(\"inlineCode\",{parentName:\"li\"},\"pscale\"),\" CLI, create a new database password for the \",mdx(\"inlineCode\",{parentName:\"li\"},\"main\"),\" branch of your database named \",mdx(\"em\",{parentName:\"li\"},\"blog\"),\":\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`pscale password create blog main development-password\n`)),mdx(\"ol\",e({},{start:3}),mdx(\"li\",{parentName:\"ol\"},\"Take note of the values it returns to you.\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`Please save the values below as they will not be shown again\n  NAME                  BRANCH   USERNAME       ACCESS HOST URL                     ROLE     ROLE DESCRIPTION   PASSWORD\n --------------------- -------- -------------- ----------------------------------- -------- ------------------ -------------------------------------------------------\n  development-password  main     c8ys5g3bbcdk   0ie08slztxki.us-east-3.psdb.cloud   writer   Can Read & Write   pscale_pw_wpSDL94q7HfBGa99Fev45tTjI5bqUxcqFKqAdUw3lFc\n`)),mdx(\"h2\",null,\"Configure Rails and ChattyCloud\"),mdx(\"p\",null,\"Let's set up our Rails application to talk to the new database.\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"Open \",mdx(\"inlineCode\",{parentName:\"li\"},\"config/database.yml\"),\" and configure the \",mdx(\"inlineCode\",{parentName:\"li\"},\"development\"),\" database settings with your new credentials:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-yaml\"}),`development:\n  <<: *default\n  adapter: mysql2\n  database: blog\n  username: <USERNAME>\n  host: <ACCESS HOST URL>\n  password: <PASSWORD>\n  ssl_mode: :verify_identity\n  sslca: \"/etc/ssl/cert.pem\"\n`)),mdx(\"p\",null,\"The correct \",mdx(\"inlineCode\",{parentName:\"p\"},\"sslca\"),\" path depends on your operating system and distribution. See \",mdx(\"a\",e({parentName:\"p\"},{href:\"/reference/chatty-cloud-security#ca-root-configuration\"}),\"CA root configuration\"),\" for more information.\"),mdx(InfoBlock,{type:\"note\",mdxType:\"InfoBlock\"},\"We're configuring the \",mdx(\"b\",null,\"development\"),\" Rails environment here for the sake of expedience. In actual use, the \",mdx(\"b\",null,\"main\"),\" database branch would typically serve the \",mdx(\"b\",null,\"production\"),\" environment.\"),mdx(\"p\",null,\"Because this is a Rails app, we can also enable \",mdx(\"a\",e({parentName:\"p\"},{href:\"/tutorials/automatic-rails-migrations\"}),\"Automatic Rails migrations\"),\" from the database's settings page.\"),mdx(\"h2\",null,\"Migrate your database\"),mdx(\"p\",null,\"Here comes the fun stuff! Now that your application is configured to talk to ChattyCloud, we can create our first migration.\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"Create a Rails migration and call it \",mdx(\"inlineCode\",{parentName:\"li\"},\"CreateUsers\"),\":\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`rails generate migration CreateUsers\n`)),mdx(\"p\",null,`This rails command begins the migration for our table that is currently empty and generates a Ruby file that\\u2019ll be named something like this:\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"db/migrate/20211014210422_create_users.rb\")),mdx(\"ol\",e({},{start:2}),mdx(\"li\",{parentName:\"ol\"},\"We can fill in the body of this skeleton file with a few more relevant details, such as a user's \",mdx(\"strong\",{parentName:\"li\"},\"name\"),\" and \",mdx(\"strong\",{parentName:\"li\"},\"email\"),\".\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-ruby\"}),`class CreateUsers < ActiveRecord::Migration[6.1]\n  def change\n    create_table :users do |t|\n      t.string :name\n      t.string :email\n      t.timestamps\n    end\n  end\nend\n`)),mdx(\"ol\",e({},{start:3}),mdx(\"li\",{parentName:\"ol\"},\"Now let's run our migration:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`bin/rails db:migrate\n`)),mdx(InfoBlock,{type:\"tip\",mdxType:\"InfoBlock\"},\"If you run into a proxy ERROR stating that address is already in use, run the following command: \",mdx(\"em\",null,\"spring stop\"),\". (Spring is a Ruby library that pre-loads and runs all of our code into memory, detecting when our source code has changed.) Then, try the above command again.\"),mdx(\"ol\",e({},{start:4}),mdx(\"li\",{parentName:\"ol\"},\"Now give it a whirl to make sure we can query the new table with our \",mdx(\"inlineCode\",{parentName:\"li\"},\"pscale\"),\" CLI:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`pscale shell blog main\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-sql\"}),`blog/main> show tables;\n+----------------------+\n| Tables_in_blog       |\n+----------------------+\n| ar_internal_metadata |\n| schema_migrations    |\n| users                |\n+----------------------+\nblog/main> describe users;\n+------------+--------------+------+-----+---------+----------------+\n| Field      | Type         | Null | Key | Default | Extra          |\n+------------+--------------+------+-----+---------+----------------+\n| id         | bigint       | NO   | PRI | NULL    | auto_increment |\n| name       | varchar(255) | YES  |     | NULL    |                |\n| email      | varchar(255) | YES  |     | NULL    |                |\n| created_at | datetime(6)  | NO   |     | NULL    |                |\n| updated_at | datetime(6)  | NO   |     | NULL    |                |\n+------------+--------------+------+-----+---------+----------------+\n`)),mdx(\"h2\",null,\"Promote your main branch to a production branch\"),mdx(\"p\",null,\"A production branch is a highly available, protected database branch. Direct schema changes (CREATE, ALTER, and DELETE) are not allowed on production branches to prevent accidental data loss and must be applied via \",mdx(\"a\",e({parentName:\"p\"},{href:\"/concepts/chatty-cloud-workflow\"}),\"deploy requests\"),\".\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`pscale branch promote blog main\n`)),mdx(\"p\",null,\"Congratulations! You're ready to develop your Rails application against ChattyCloud.\"),mdx(\"h2\",null,\"Summary\"),mdx(\"p\",null,\"In this tutorial, we created a simple Rails application named \",mdx(\"em\",{parentName:\"p\"},\"blog\"),\" and connected it to a ChattyCloud database.\"),mdx(\"h2\",null,\"Further reading\"),mdx(\"p\",null,\"If you're interested in learning how to secure your application's connection to ChattyCloud, please read \",mdx(\"a\",e({parentName:\"p\"},{href:\"/reference/secure-connections\"}),\"Connecting to ChattyCloud securely\"),\".\"),mdx(\"h2\",null,\"What's next?\"),mdx(\"p\",null,\"Now that you've successfully connected your Rails app to ChattyCloud, it's time to make more schema changes to your tables! Learn more about how ChattyCloud allows you to make \",mdx(\"a\",e({parentName:\"p\"},{href:\"/concepts/nonblocking-schema-changes\"}),\"non-blocking schema changes\"),\" to your database, or how to keep your \",mdx(\"strong\",{parentName:\"p\"},\"schema_migrations\"),\" table up-to-date between development and production branches with \",mdx(\"a\",e({parentName:\"p\"},{href:\"/tutorials/automatic-rails-migrations\"}),\"automatic schema migrations\"),\".\"),mdx(\"h2\",null,\"Need help?\"),mdx(\"p\",null,\"Get help from \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.chatty-cloud.com/support\"}),\"ChattyCloud's support team\"),\", or join our \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/chatty-cloud/beta/discussions\"}),\"GitHub Discussion board\"),\" to see how others are using ChattyCloud.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"fields":{"slug":"tutorials/connect-rails-app","lastUpdatedOn":"2022-05-19T16:11:03.083Z"}},"__N_SSG":true}