{"pageProps":{"frontmatter":{"title":"Peer to Peer Chat","subtitle":"How to start chat with peer member id"},"headings":[{"depth":2,"value":"Chatty Component"},{"depth":2,"value":"Chatty Props"},{"depth":3,"value":"with"},{"depth":3,"value":"at"},{"depth":2,"value":"Chatty Callback"},{"depth":3,"value":"headerLeftOnPress"},{"depth":2,"value":"Need help?"}],"body":{"compiledSource":"var c=Object.defineProperty,u=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(t,e,a)=>e in t?c(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,n=(t,e)=>{for(var a in e||(e={}))r.call(e,a)&&p(t,a,e[a]);if(i)for(var a of i(e))s.call(e,a)&&p(t,a,e[a]);return t},h=(t,e)=>u(t,d(e));var l=(t,e)=>{var a={};for(var o in t)r.call(t,o)&&e.indexOf(o)<0&&(a[o]=t[o]);if(t!=null&&i)for(var o of i(t))e.indexOf(o)<0&&s.call(t,o)&&(a[o]=t[o]);return a};const makeShortcode=t=>function(a){return console.warn(\"Component \"+t+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",n({},a))},NextBlock=makeShortcode(\"NextBlock\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var o=a,{components:t}=o,e=l(o,[\"components\"]);return mdx(MDXLayout,h(n(n({},layoutProps),e),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Chatty Component\"),mdx(\"p\",null,\"Let's assume that user want to chat with touching chat icon button at other person's profile screen.\"),mdx(\"p\",null,\"If init function is completed with success each other, both of them are ready to join chat.\"),mdx(\"p\",null,\"Then as below, navigate to following Chat.js screen with 'with' param that indicates peer member id.\"),mdx(\"p\",null,\"This example javascript with react\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-javascript\"}),`// Chat.js file that you generated\n\nimport Chatty from 'chatty-cloud-js';\n\nconst Chat = (props) => {\n  return (\n    <Chatty\n      with={props.route.params.with}                          // assign peer member id which want to chat with to 'with' param\n      headerLeftOnPress={() => props.navigation.goBack()}     // register callback function for returning back to previous screen \n    />\n  );\n};\n\nexport default Chat;\n\n\n`)),mdx(\"p\",null,`Congratulations!  Now you can send messages and receive mesages with chatty default ui components\nIs it's design not satisfied with you? Don't worry about it. You can customize it fully.\nFirst of all, look into available parameter list of Chatty React native element.`),mdx(\"h2\",null,\"Chatty Props\"),mdx(\"h3\",null,\"with\"),mdx(\"p\",null,\"the peer member id to want to chat\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Type: string\"),mdx(\"li\",{parentName:\"ul\"},\"Default: undefined\")),mdx(\"h3\",null,\"at\"),mdx(\"p\",null,\"chat id to enter existing chat\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Type: string\"),mdx(\"li\",{parentName:\"ul\"},\"Default: undefined\")),mdx(\"h2\",null,\"Chatty Callback\"),mdx(\"h3\",null,\"headerLeftOnPress\"),mdx(\"p\",null,\"onPress callback of left component in Chatty Header\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Type: string\"),mdx(\"li\",{parentName:\"ul\"},\"Default: undefined\")),mdx(\"h2\",null,\"Need help?\"),mdx(\"p\",null,\"Get help from \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://www.chatty-cloud.com/support\"}),\"ChattyCloud's support team\"),\", or join our \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://github.com/chatty-cloud/beta/discussions\"}),\"GitHub Discussion board\"),\" to see how others are using ChattyCloud.\"),mdx(NextBlock,{steps:[{text:\"Listing Chats\",link:\"/getting-started/listing-chats\"}],mdxType:\"NextBlock\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}},"fields":{"slug":"getting-started/p2p","lastUpdatedOn":"2022-04-18T12:15:25.962Z"}},"__N_SSG":true}